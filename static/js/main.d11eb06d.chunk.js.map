{"version":3,"sources":["PostLoader.js","PostList.js","Gallery.js","App.js","serviceWorker.js","index.js"],"names":["PostLoader","state","loading","markdown","_this2","this","match","props","setState","fetch","concat","params","id","then","response","text","marked","catch","_","_this$state","classes","react_default","a","createElement","index_es","className","paper","dangerouslySetInnerHTML","__html","Component","withStyles","theme","margin","spacing","unit","padding","withRouter","PostList","posts","json","metadata","map","post","Link","key","path","to","link","primary","title","secondary","textDecoration","images","src","alt","Gallery","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","randomNumber","limit","Math","floor","random","generateClassName","item","handleOnClick","event","image","_event$currentTarget","currentTarget","naturalWidth","naturalHeight","overlayImageStyle","assign","maxWidth","maxHeight","overflow","window","innerHeight","overlay","currentImage","handleClose","img","onClick","react","gallery","style","display","gridTemplateColumns","gridAutoRows","gridAutoFlow","gridTemplateRows","v1","gridRow","v2","v3","v4","h1","gridColumn","h2","h3","h4","width","height","objectFit","cursor","position","background","top","right","bottom","left","zIndex","justifyItems","alignItems","App","HashRouter","AppBar_default","Toolbar_default","Typography_default","variant","color","flexGrow","component","Route","exact","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d11eb06d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport marked from \"marked\";\r\nimport { LinearProgress, Paper, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    margin: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass PostLoader extends Component {\r\n  state = {\r\n    loading: false,\r\n    markdown: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    this.setState({ loading: true }, () => {\r\n      fetch(`./posts/${match.params.id}.md`)\r\n        .then(response => {\r\n          return response.text();\r\n        })\r\n        .then(text => {\r\n          this.setState({\r\n            markdown: marked(text),\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(_ => {\r\n          this.setState({ loading: false });\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { markdown, loading } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    // The name of the dangerouslySetInnerHTML can be a little repellent\r\n    // but it is only to remind yourself that this expose users to XSS.\r\n    // This website can't take users input, so you do not have to be afraid\r\n    // of this line ðŸ˜ƒ\r\n\r\n    if (loading) {\r\n      return <LinearProgress />;\r\n    } else {\r\n      return (\r\n        <Paper className={classes.paper}>\r\n          <article dangerouslySetInnerHTML={{ __html: markdown }} />\r\n        </Paper>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(PostLoader));\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  withStyles,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    textDecoration: \"none\"\r\n  }\r\n};\r\n\r\nclass PostList extends Component {\r\n  state = {\r\n    loading: false,\r\n    posts: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true }, () => {\r\n      fetch(`./metadata.json`)\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(metadata => {\r\n          this.setState({ loading: false, posts: metadata.posts });\r\n        })\r\n        .catch(_ => {\r\n          this.setState({ loading: false });\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { loading, posts } = this.state;\r\n\r\n    return loading ? (\r\n      <LinearProgress />\r\n    ) : (\r\n      <List>\r\n        {posts.map(post => (\r\n          <Link\r\n            key={post.path}\r\n            to={`/post/${post.path}`}\r\n            className={classes.link}\r\n          >\r\n            <ListItem>\r\n              <ListItemText primary={post.title} secondary={post.path} />\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PostList);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  gallery: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill, 100px)\",\r\n    gridAutoRows: \"100px\",\r\n    gridAutoFlow: \"dense\"\r\n  },\r\n  item: {\r\n    overflow: \"hidden\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: 1,\r\n    gridTemplateRows: 1\r\n  },\r\n  v1: { gridRow: \"span 1\" },\r\n  v2: { gridRow: \"span 2\" },\r\n  v3: { gridRow: \"span 3\" },\r\n  v4: { gridRow: \"span 4\" },\r\n  h1: { gridColumn: \"span 1\" },\r\n  h2: { gridColumn: \"span 2\" },\r\n  h3: { gridColumn: \"span 3\" },\r\n  h4: { gridColumn: \"span 4\" },\r\n  img: {\r\n    gridColumn: \"1 / -1\",\r\n    gridRow: \"1 / -1\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n    cursor: \"zoom-in\"\r\n  },\r\n  overlay: {\r\n    position: \"fixed\",\r\n    background: \"rgba(0, 0, 0, 0.7)\",\r\n    top: \"0\",\r\n    right: \"0\",\r\n    bottom: \"0\",\r\n    left: \"0\",\r\n    zIndex: \"2\",\r\n    display: \"flex\",\r\n    justifyItems: \"center\",\r\n    alignItems: \"center\",\r\n    cursor: \"zoom-out\"\r\n  }\r\n};\r\n\r\nconst images = [\r\n  {\r\n    src: \"./img/gallery/amiens_20181123_193548.jpg\",\r\n    alt: \"Grande Roue du MarchÃ© de NoÃ«l d'Amiens\"\r\n  },\r\n  {\r\n    src: \"./img/gallery/amiens_20181201_201109.jpg\",\r\n    alt: \"Rue d'Amiens vers le quartier de Saint Leu\"\r\n  },\r\n  {\r\n    src: \"./img/gallery/amiens_20181229_195026.jpg\",\r\n    alt: \"BiÃ¨re Tempest Mexicake Brune\"\r\n  },\r\n  {\r\n    src: \"./img/gallery/rouen_20181122_140027.jpg\",\r\n    alt: \"AmphithÃ©Ã¢tre principal de Codeurs en Seine 2018\"\r\n  }\r\n];\r\n\r\n// Mainly designed using inspiration from Wes Bos grid course.\r\n// https://www.youtube.com/watch?v=OkCnhz__aFM\r\nclass Gallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      overlay: false,\r\n      currentImage: {},\r\n      overlayImageStyle: {}\r\n    };\r\n\r\n    this.images = images.map(image => {\r\n      return (\r\n        <div className={this.generateClassName()} key={image.src}>\r\n          <img\r\n            src={image.src}\r\n            alt={image.alt}\r\n            className={props.classes.img}\r\n            onClick={event => this.handleOnClick(event, image)}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  randomNumber = limit => {\r\n    return Math.floor(Math.random() * limit) + 1;\r\n  };\r\n\r\n  generateClassName = () => {\r\n    const { classes } = this.props;\r\n\r\n    return `${classes.item} ${classes[\"h\" + this.randomNumber(4)]} ${\r\n      classes[\"v\" + this.randomNumber(4)]\r\n    }`;\r\n  };\r\n\r\n  handleOnClick = (event, image) => {\r\n    const { naturalWidth, naturalHeight } = event.currentTarget;\r\n\r\n    const overlayImageStyle = Object.assign(\r\n      { margin: \"auto\" },\r\n      naturalWidth > naturalHeight\r\n        ? {\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"auto\",\r\n            overflow: \"hidden\"\r\n          }\r\n        : { maxHeight: window.innerHeight }\r\n    );\r\n\r\n    this.setState({ overlay: true, currentImage: image, overlayImageStyle });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ overlay: false, currentImage: {} });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { overlay, currentImage, overlayImageStyle } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.gallery}>{this.images}</div>\r\n        {overlay && (\r\n          <div className={classes.overlay} onClick={this.handleClose}>\r\n            <img\r\n              src={currentImage.src}\r\n              alt={currentImage.alt}\r\n              style={overlayImageStyle}\r\n            />\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Gallery);\r\n","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport PostLoader from \"./PostLoader\";\nimport { Button } from \"@material-ui/core\";\nimport PostList from \"./PostList\";\nimport Gallery from \"./Gallery\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography\n                variant=\"h6\"\n                color=\"inherit\"\n                style={{\n                  flexGrow: 1\n                }}\n              >\n                YoannFleuryDev\n              </Typography>\n              <Button component={Link} to=\"/\" color=\"inherit\">\n                Accueil\n              </Button>\n              <Button component={Link} to=\"/photos\" color=\"inherit\">\n                Photos\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <Route path=\"/\" component={PostList} exact />\n          <Route path=\"/post/:id\" component={PostLoader} />\n          <Route path=\"/photos\" component={Gallery} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}